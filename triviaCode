Option Explicit

' Variables to store the slide numbers of the first and last slides of each section
Dim easyBegin As Integer, easyEnd As Integer, mediumBegin As Integer, mediumEnd As Integer, hardBegin As Integer, hardEnd As Integer, lotteryBegin As Integer, lotteryEnd As Integer
' Variables to store the slide numbers of the award-points slides for both teams
Dim birdsOne As Integer, birdsTwo As Integer, birdsThree As Integer, pigsOne As Integer, pigsTwo As Integer, pigsThree As Integer
' Variables to store the slide numbers of key slides
Dim gameboard As Integer, lottery As Integer
' Variables to handle transitions and animation logic
Dim chosenSlide As Integer, level As String, chosenTrivia As String, chosenLottery As String
Dim triviaToHide As String, lotteryToHide As String, hideTrivia As Boolean, hideLottery As Boolean

Dim alreadyShownSlides() As Boolean

Sub StartGame()
    Dim sld As Slide, shp As Shape
    ' Initialize key variables that need to specific value before the first time a sub assigns them a new value
    lotteryToHide = "firstRun"
    hideTrivia = False
    hideLottery = False
    
    ' Set the current slide numbers for the gameboard and points slides
    For Each sld In ActivePresentation.Slides
        If sld.SlideID >= 259 And sld.SlideID <= 272 Then
            If sld.SlideID = 259 Then
                gameboard = sld.slideIndex
            ElseIf sld.SlideID = 260 Then
                birdsOne = sld.slideIndex
            ElseIf sld.SlideID = 262 Then
                birdsTwo = sld.slideIndex
            ElseIf sld.SlideID = 264 Then
                birdsThree = sld.slideIndex
            ElseIf sld.SlideID = 266 Then
                pigsOne = sld.slideIndex
            ElseIf sld.SlideID = 268 Then
                pigsTwo = sld.slideIndex
            ElseIf sld.SlideID = 270 Then
                pigsThree = sld.slideIndex
            ElseIf sld.SlideID = 272 Then
                lottery = sld.slideIndex
            End If
        End If
    Next sld
    
    ' Remove any leftover animations from the gameboard and lottery slides
    If ActivePresentation.Slides(gameboard).TimeLine.MainSequence.Count > 0 Then
        ' Iterate through all the animation effects and delete them
        Dim k As Long
        For k = ActivePresentation.Slides(gameboard).TimeLine.MainSequence.Count To 1 Step -1
            ActivePresentation.Slides(gameboard).TimeLine.MainSequence.Item(k).Delete
        Next k
    End If
    
    If ActivePresentation.Slides(lottery).TimeLine.MainSequence.Count > 0 Then
        ' Iterate through all the animation effects and delete them
        Dim l As Long
        For l = ActivePresentation.Slides(lottery).TimeLine.MainSequence.Count To 1 Step -1
            ActivePresentation.Slides(lottery).TimeLine.MainSequence.Item(l).Delete
        Next l
    End If
    
    'Make all shapes on the gameboard slide visible
    For Each shp In ActivePresentation.Slides(gameboard).Shapes
        shp.Visible = msoTrue
    Next shp
    
    'Make all shapes on the lottery slide visible
    For Each shp In ActivePresentation.Slides(lottery).Shapes
        shp.Visible = msoTrue
    Next shp
    
    ' Delete leftover "Question ID" textboxes on trivia slides and reset the scoreboards to 0
    For Each sld In ActivePresentation.Slides ' Loop through all slides
        For Each shp In sld.Shapes ' Loop through all shapes on the slide
            If shp.Name = "QuestionID" Then ' Check if Shape name is "QuestionID"
                shp.Delete ' Delete the Shape
            End If
        Next shp
    Next sld
    
    ' Reset the scoreboards to 0
    ActivePresentation.Slides(gameboard).Shapes("Birds_Scoreboard").TextFrame.TextRange.Text = 0
    ActivePresentation.Slides(gameboard).Shapes("Pigs_Scoreboard").TextFrame.TextRange.Text = 0
    
    ' Create arrays to keep track of which questions and lottery events have already been shown this game
    Dim secIndex As Integer, secStart() As Integer, secEnd() As Integer
    ReDim secStart(1 To ActivePresentation.SectionProperties.Count)
    ReDim secEnd(1 To ActivePresentation.SectionProperties.Count)

    For Each sld In ActivePresentation.Slides
        secIndex = sld.sectionIndex
        If secStart(secIndex) = 0 Or sld.slideIndex < secStart(secIndex) Then
            secStart(secIndex) = sld.slideIndex
        End If
        If sld.slideIndex > secEnd(secIndex) Then
            secEnd(secIndex) = sld.slideIndex
        End If
    Next sld

    Dim i As Integer

    For i = 1 To ActivePresentation.SectionProperties.Count
        If ActivePresentation.SectionProperties.Name(i) = "Easy Questions" Then
            easyBegin = secStart(i)
            easyEnd = secEnd(i)
        ElseIf ActivePresentation.SectionProperties.Name(i) = "Medium Questions" Then
            mediumBegin = secStart(i)
            mediumEnd = secEnd(i)
        ElseIf ActivePresentation.SectionProperties.Name(i) = "Hard Questions" Then
            hardBegin = secStart(i)
            hardEnd = secEnd(i)
        ElseIf ActivePresentation.SectionProperties.Name(i) = "Lottery Events" Then
            lotteryBegin = secStart(i)
            lotteryEnd = secEnd(i)
        End If
    Next i
    
    ReDim alreadyShownSlides(1 To ActivePresentation.Slides.Count)
    Dim j As Integer
    For j = 1 To ActivePresentation.Slides.Count
        If j >= easyBegin And j <= easyEnd Or j >= mediumBegin And j <= mediumEnd Or j >= hardBegin And j <= hardEnd Or j >= lotteryBegin And j <= lotteryEnd Then
            alreadyShownSlides(j) = False
        End If
    Next j
    
    ' Proceed to the next slide
    SlideShowWindows(1).View.Next
End Sub

Sub Easy(clickedShp As Shape)
    level = "Easy"
    chosenTrivia = clickedShp.Name
    
    ChooseSlide
End Sub

Sub Medium(clickedShp As Shape)
    level = "Medium"
    chosenTrivia = clickedShp.Name
    
    ChooseSlide
End Sub

Sub Hard(clickedShp As Shape)
    level = "Hard"
   
    chosenTrivia = clickedShp.Name
    
    ChooseSlide
End Sub

Sub EasyAndMedium(clickedShp As Shape)
    level = "EasyAndMedium"
    chosenTrivia = clickedShp.Name
    
    ChooseSlide
End Sub

Sub MediumAndHard(clickedShp As Shape)
    level = "MediumAndHard"
    chosenTrivia = clickedShp.Name
    
    ChooseSlide
End Sub

Sub All(clickedShp As Shape)
    level = "All"
    chosenTrivia = clickedShp.Name
    
    ChooseSlide
End Sub

Private Sub ChooseSlide()
    Dim sld As Slide, shp As Shape, lowestSlide As Integer, highestSlide As Integer
    
    If level = "All" Then
        lowestSlide = easyBegin
        highestSlide = hardEnd
    ElseIf level = "Easy" Then
        lowestSlide = easyBegin
        highestSlide = easyEnd
    ElseIf level = "Medium" Then
        lowestSlide = mediumBegin
        highestSlide = mediumEnd
    ElseIf level = "High" Then
        lowestSlide = hardBegin
        highestSlide = hardEnd
    ElseIf level = "EasyAndMedium" Then
        lowestSlide = easyBegin
        highestSlide = mediumEnd
    ElseIf level = "MediumAndHard" Then
        lowestSlide = mediumBegin
        highestSlide = hardEnd
    End If
        
    ' Pick a random slide until we find one that has not been shown yet
    Do
        chosenSlide = RandBetween(lowestSlide, highestSlide) ' Randomly choose a slide between the given values
    Loop While alreadyShownSlides(chosenSlide) ' If this is logically true, then it will loop until false
    
    alreadyShownSlides(chosenSlide) = True ' Set this slide as chosen so that it doesn't appear again
    
    Dim sldWidth As Long, tbHeight As Long, tbWidth As Long, tbLeft As Long
    sldWidth = sld.Master.Width
    tbHeight = 124
    tbWidth = 105
    tbLeft = sldWidth - (tbWidth)
    
    SlideShowWindows(1).View.GotoSlide (chosenSlide)
    
    Set sld = ActivePresentation.Slides(chosenSlide)
    
    With sld.Shapes.AddTextbox(msoOrientationHorizontal, tbLeft, 0, tbWidth, tbHeight)
        .Name = "QuestionID"
        .TextFrame.TextRange.Text = chosenTrivia
        .TextFrame.TextRange.Font.Name = "Feast of Flesh BB"
        .TextFrame.TextRange.Font.Size = 96
        .TextFrame.TextRange.Font.Color.RGB = RGB(0, 0, 0)
        .TextFrame.TextRange.Font.Bold = msoTrue
        .TextFrame.TextRange.Font.Italic = msoTrue
        .TextFrame.TextRange.Paragraphs.ParagraphFormat.Alignment = ppAlignCenter
    End With
    
    If hideLottery = True Or hideTrivia = True Then
        MakeShapeNotVisible
    End If
End Sub

Sub AwardEggs(winningTeam As Shape)
    Dim sld As Slide
    Set sld = ActivePresentation.SlideShowWindow.View
    If winningTeam.Name = "King Piggie (Awared Points)" Then
        If sld.Slide.SlideNumber >= easyBegin And sld.SlideNumber <= easyEnd Then
            sld.GotoSlide (pigsOne)
        ElseIf sld.Slide.SlideNumber >= mediumBegin And sld.Slide.SlideNumber <= mediumEnd Then
            sld.GotoSlide (pigsTwo)
        ElseIf sld.Slide.SlideNumber >= hardBegin And sld.Slide.SlideNumber <= hardEnd Then
            sld.GotoSlide (pigsThree)
        End If
    ElseIf winningTeam = "Angry Red (Award Points)" Then
        If sld.Slide.SlideNumber >= easyBegin And sld.SlideNumber <= easyEnd Then
            sld.GotoSlide (birdsOne)
        ElseIf sld.Slide.SlideNumber >= mediumBegin And sld.Slide.SlideNumber <= mediumEnd Then
            sld.GotoSlide (birdsTwo)
        ElseIf sld.Slide.SlideNumber >= hardBegin And sld.Slide.SlideNumber <= hardEnd Then
            sld.GotoSlide (birdsThree)
        End If
    End If
End Sub

Sub ToLottery(clickedShp As Shape)
        
    chosenTrivia = clickedShp.Name
    
    SlideShowWindows(1).View.GotoSlide (lottery)
        
    ' If this isn't the first time seeing the lottery, hide the PREVIOUS choice
    If chosenLottery <> "firstRun" Then
        ShapeToExit "lotteryShape"
    End If
End Sub

Sub ToEvent(clickedShp As Shape)
        
    chosenLottery = clickedShp.Name
    
    Do
        chosenSlide = RandBetween(lotteryBegin, lotteryEnd)
    Loop While alreadyShownSlides(chosenSlide)
    
    alreadyShownSlides(chosenSlide) = True
    
    SlideShowWindows(1).View.GotoSlide (chosenSlide)
        
    If hideLottery = True Or hideTrivia = True Then
        MakeShapeNotVisible
    End If
    
End Sub

Sub ReturnToGameboard()
    Dim shp As Shape, sld As Slide
    
    ' Delete any created QuestionID textboxes
    ' For efficiency, this could instead be changed to solely target the trivia slide that was just seen
    Set sld = SlideShowWindows(1).View.Slide
    For Each shp In sld.Shapes
        If shp.Name = "QuestionID" Then
            shp.Delete
            Exit For
        End If
    Next shp
    
    SlideShowWindows(1).View.GotoSlide (gameboard)
    
    ShapeToExit "triviaShape"
End Sub

Private Sub ShapeToExit(shapeType As String)
    Dim sld As Slide, shapeToRemove As String
                
    If shapeType = "triviaShape" Then
        shapeToRemove = chosenTrivia
        triviaToHide = chosenTrivia
        hideTrivia = True
        Set sld = ActivePresentation.Slides(gameboard)
    ElseIf shapeType = "lotteryShape" Then
        shapeToRemove = chosenLottery
        lotteryToHide = chosenLottery
        hideLottery = True
        Set sld = ActivePresentation.Slides(lottery)
    End If
    
    With sld.TimeLine.MainSequence.AddEffect(Shape:=sld.Shapes(shapeToRemove), EffectId:=msoAnimEffectRandomBars)
        .Timing.Duration = 0.5
        .Timing.TriggerType = msoAnimTriggerWithPrevious
        .Exit = msoTrue
    End With
End Sub

Private Sub MakeShapeNotVisible()
    If hideTrivia = True Then
        ActivePresentation.Slides(gameboard).Shapes(triviaToHide).Visible = msoFalse
        hideTivia = False
    End If
    If hideLottery = True Then
        ActivePresentation.Slides(gameboard).Shapes(lotteryToHide).Visible = msoFalse
        hideLottery = False
    End If
End Sub

Function RandBetween(vLow As Integer, vHigh As Integer)
    Randomize
    RandBetween = Int(vLow + (vHigh - vLow + 1) * Rnd())
End Function
